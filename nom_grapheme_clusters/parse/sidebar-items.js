window.SIDEBAR_ITEMS = {"fn":[["alpha0","Recognizes zero or more UTF-8 alphabetic segments, possibly with diacritics."],["alpha1","Recognizes one or more UTF-8 alphabetic segments, possibly with diacritics."],["alphanumeric0","Recognizes zero or more UTF-8 alphanumeric segments, possibly with diacritics."],["alphanumeric1","Recognizes one or more UTF-8 alphanumeric segments, possibly with diacritics."],["any_segment","Recognizes any grapheme cluster/segment."],["ascii_alpha0","Recognizes zero or more ASCII alphabetic segments without diacritics."],["ascii_alpha1","Recognizes one or more ASCII alphabetic segments without diacritics."],["ascii_alphanumeric0","Recognizes zero or more ASCII alphanumeric segments without diacritics."],["ascii_alphanumeric1","Recognizes one or more ASCII alphanumeric segments without diacritics."],["ascii_numeric0","Recognizes zero or more ASCII numeric segments without diacritics."],["ascii_numeric1","Recognizes one or more ASCII numeric segments without diacritics."],["char_alpha0","Recognizes zero or more UTF-8 alphabetic segments without diacritics."],["char_alpha1","Recognizes one or more UTF-8 alphabetic segments without diacritics."],["char_alphanumeric0","Recognizes zero or more UTF-8 alphanumeric segments without diacritics."],["char_alphanumeric1","Recognizes one or more UTF-8 alphanumeric segments without diacritics."],["char_numeric0","Recognizes zero or more UTF-8 numeric segments without diacritics."],["char_numeric1","Recognizes one or more UTF-8 numeric segments without diacritics."],["crlf","Recognizes the sequence `\"\\r\\n\"`."],["digit0","Recognizes zero or more digits in the given base. ASCII characters `0-9`. `a-z`, `A-Z` are considered digits, depending on the base."],["digit1","Recognizes one or more digits in the given base. ASCII characters `0-9`. `a-z`, `A-Z` are considered digits, depending on the base."],["digits_i128","Parses a signed 128-bit number. Consumes all available digits, but might return an error if too large."],["digits_i16","Parses a signed 16-bit number. Consumes all available digits, but might return an error if too large."],["digits_i32","Parses a signed 32-bit number. Consumes all available digits, but might return an error if too large."],["digits_i64","Parses a signed 64-bit number. Consumes all available digits, but might return an error if too large."],["digits_i8","Parses a signed 8-bit number. Consumes all available digits, but might return an error if too large."],["digits_u128","Parses an unsigned 128-bit number. Consumes all available digits, but might return an error if too large."],["digits_u16","Parses an unsigned 16-bit number. Consumes all available digits, but might return an error if too large."],["digits_u32","Parses an unsigned 32-bit number. Consumes all available digits, but might return an error if too large."],["digits_u64","Parses an unsigned 64-bit number. Consumes all available digits, but might return an error if too large."],["digits_u8","Parses an unsigned 8-bit number. Consumes all available digits, but might return an error if too large."],["line_ending","Parses line ending, either a linefeed or a `\"\\r\\n\"` sequence."],["newline","Recognizes one linefeed (`\"\\n\"`) ASCII character."],["none_of","Recognizes a grapheme clusters/segments NOT in the given list."],["not_line_ending","Parses segments until a line ending (`\"\\n\"` or `\"\\r\\n\"`) is found."],["numeric0","Recognizes zero or more UTF-8 numeric segments, possibly with diacritics."],["numeric1","Recognizes one or more UTF-8 numeric segments, possibly with diacritics."],["one_of","Recognizes any of the grapheme clusters/segments in the given list."],["satisfy","Recognizes a character that satifies the given `condition` function."],["segment","Recognizes the given grapheme cluster/segment."],["space0","Recognizes zero or more ASCII spaces."],["space1","Recognizes one or more ASCII spaces."],["tab","Recognizes one tab (`\"\\t\"`) ASCII character."],["whitespace0","Recognizes zero or more unicode whitespace graphemes."],["whitespace1","Recognizes one or more unicode whitespace graphemes."]],"struct":[["Tag","A type usable as tag for a parser without having to create a proper [`Span`]."]]};